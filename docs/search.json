[{"path":"https://ebuhle.github.io/salmonIPM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Buhle. Author, maintainer. Mark Scheuerell. Author.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buhle E, Scheuerell M (2024). salmonIPM: Integrated Population Models Pacific Salmonids. R package version 1.6.0.9000, https://ebuhle.github.io/salmonIPM/.","code":"@Manual{,   title = {salmonIPM: Integrated Population Models for Pacific Salmonids},   author = {Eric Buhle and Mark Scheuerell},   year = {2024},   note = {R package version 1.6.0.9000},   url = {https://ebuhle.github.io/salmonIPM/}, }"},{"path":"https://ebuhle.github.io/salmonIPM/index.html","id":"salmonipm","dir":"","previous_headings":"","what":"Integrated Population Models for Pacific Salmonids","title":"Integrated Population Models for Pacific Salmonids","text":"development repo salmonIPM, R package fits integrated population models data anadromous Pacific salmonid populations using hierarchical Bayesian framework implemented Stan. Various models available, representing alternative life histories data structures well independent hierarchically pooled populations. Users can specify stage-specific covariate effects hyper-priors using formula syntax.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Integrated Population Models for Pacific Salmonids","text":"Install configure rstan (version 2.26 higher) following instructions RStan Getting Started vignette. Install current version salmonIPM GitHub using devtools. repo private time , necessary generate personal access token (PAT) pass install_github() discussed . recommend using multiple cores available installing salmonIPM reduce compilation time. can setting R environment variable MAKEFLAGS -jX, X number cores. can done interactively using Sys.setenv(MAKEFLAGS = \"-jX\") can specified .Renviron.","code":"if(!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"ebuhle/salmonIPM\", auth_token = \"my_PAT\")"},{"path":"https://ebuhle.github.io/salmonIPM/reference/as.array.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior samples as a matrix, array or data frame — as.array.salmonIPMfit","title":"Extract posterior samples as a matrix, array or data frame — as.array.salmonIPMfit","text":"Post-warmup samples salmonIPMfit object converted standard formats. S3 methods wrappers .*.stanfit(object$stanfit); see .array.stanfit() details.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/as.array.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior samples as a matrix, array or data frame — as.array.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' as.matrix(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as.array(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as.data.frame(   x,   pars = \"all\",   include = TRUE,   row.names = NULL,   optional = FALSE,   ... )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/as.array.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior samples as a matrix, array or data frame — as.array.salmonIPMfit","text":"x object class salmonIPMfit. pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\"). Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. default \"\" quantities monitored. include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. ... Currently ignored. row.names NULL character vector giving row names data frame. Missing values allowed. optional logical. TRUE, setting row names converting column names (syntactic names: see make.names()) optional.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/as.array.salmonIPMfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior samples as a matrix, array or data frame — as.array.salmonIPMfit","text":"matrix, array data.frame containing post-warmup samples specified quantities.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_gnormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for gnorm::gnorm() distribution using distributional::dist_wrap() — dist_gnormal","title":"Wrapper for gnorm::gnorm() distribution using distributional::dist_wrap() — dist_gnormal","text":"Wrapper gnorm::gnorm() distribution using distributional::dist_wrap()","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_gnormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for gnorm::gnorm() distribution using distributional::dist_wrap() — dist_gnormal","text":"","code":"dist_gnormal(mean = 0, scale = 1, shape = 1)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_gnormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for gnorm::gnorm() distribution using distributional::dist_wrap() — dist_gnormal","text":"mean Prior mean normal generalized normal distribution. scale Prior scale generalized normal distribution. Equivalent alpha gnorm, renamed avoid confusion spawner-recruit intrinsic productivity parameter. shape Prior shape generalized normal distribution. Equivalent beta gnorm renamed avoid confusion covariate slopes.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_lkjcorr_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for ggdist::lkjcorr_marginal() distribution using distributional::dist_wrap() — dist_lkjcorr_marginal","title":"Wrapper for ggdist::lkjcorr_marginal() distribution using distributional::dist_wrap() — dist_lkjcorr_marginal","text":"Wrapper ggdist::lkjcorr_marginal() distribution using distributional::dist_wrap()","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_lkjcorr_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for ggdist::lkjcorr_marginal() distribution using distributional::dist_wrap() — dist_lkjcorr_marginal","text":"","code":"dist_lkjcorr_marginal(K, eta = 1)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/dist_lkjcorr_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for ggdist::lkjcorr_marginal() distribution using distributional::dist_wrap() — dist_lkjcorr_marginal","text":"K Dimension correlation matrix. Must greater equal 2. eta Prior shape parameter LKJ distribution correlation matrices.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a draws object from a salmonIPMfit object — draws","title":"Create a draws object from a salmonIPMfit object — draws","text":"Convert posterior samples salmonIPMfit object draws format supported posterior-package. S3 methods wrappers as_draws_*(.array(object)).","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a draws object from a salmonIPMfit object — draws","text":"","code":"# S3 method for class 'salmonIPMfit' as_draws(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as_draws_matrix(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as_draws_array(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as_draws_df(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as_draws_list(x, pars = \"all\", include = TRUE, ...)  # S3 method for class 'salmonIPMfit' as_draws_rvars(x, pars = \"all\", include = TRUE, ...)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a draws object from a salmonIPMfit object — draws","text":"x object class salmonIPMfit. pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\"). Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. default \"\" quantities monitored. include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. ... Currently ignored.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a draws object from a salmonIPMfit object — draws","text":"draws object posterior-package. See package documentation vignettes details working objects.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a draws object from a salmonIPMfit object — draws","text":"subset variables, iterations, chains, draws, use subset_draws() making draws object.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws_df_lower_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove redundant correlation matrix elements from a draws data frame — draws_df_lower_tri","title":"Remove redundant correlation matrix elements from a draws data frame — draws_df_lower_tri","text":"Given data frame containing draws salmonIPMfit object, generated as_draws_df(object), remove diagonal upper-triangular elements correlation matrices may present leave lower-triangular elements.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws_df_lower_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove redundant correlation matrix elements from a draws data frame — draws_df_lower_tri","text":"","code":"draws_df_lower_tri(drf)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws_df_lower_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove redundant correlation matrix elements from a draws data frame — draws_df_lower_tri","text":"drf data.frame draws_df containing posterior draws rows parameters columns.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/draws_df_lower_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove redundant correlation matrix elements from a draws data frame — draws_df_lower_tri","text":"data frame class drf columns corresponding diagonal upper-triangular correlation matrix elements removed.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/extract1.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior samples for a single parameter — extract1","title":"Extract posterior samples for a single parameter — extract1","text":"Wrapper extract() applied stanfit component fitted salmonIPMfit object. Unlike extract(), returns first element, named list. useful obtaining samples single parameter (dimension), though generally .matrix(object, par) preferred.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/extract1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior samples for a single parameter — extract1","text":"","code":"extract1(object, par)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/extract1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior samples for a single parameter — extract1","text":"object object class salmonIPMfit. par Character string giving quantity return.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/get_prior_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract prior info from Stan-formatted data and model code — get_prior_info","title":"Extract prior info from Stan-formatted data and model code — get_prior_info","text":"Helper function extract user-specifiable hard-coded prior data assemble appropriate form prior.info element salmonIPMfit object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/get_prior_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract prior info from Stan-formatted data and model code — get_prior_info","text":"","code":"get_prior_info(stan_data, stanmodel, pars)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/get_prior_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract prior info from Stan-formatted data and model code — get_prior_info","text":"stan_data Named list input data passed rstan::sampling() fitting IPM, returned stan_data(). stanmodel object S4 class stanmodel constructed stan_model() rstantools installation salmonIPM-package stored internally salmonIPM:::stanmodels. pars Character vector hyperparameters priors specified.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/get_prior_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract prior info from Stan-formatted data and model code — get_prior_info","text":"named list priors pars. element named list representing prior format returned functions priors additional attribute \"type\".","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/get_prior_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract prior info from Stan-formatted data and model code — get_prior_info","text":"Priors include (1) user-specifiable salmonIPM(priors) argument (whether modified defaults) returned Stan format stan_data(), (2) explicitly hard-coded model block stanmodel, (3) implicitly defined bounds parameter declarations. extract type (1), get_prior_info() calls priors functions using contents stan_data. extract type (2), get_prior_info() parses stanmodel lines text uses regex pull sampling statement parameter string, corresponds directly priors function call. Type (3) extracted similarly type (2), bound declarations also used set bounds attribute otherwise unbounded priors (e.g. normal) types (1) (2).","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/include_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Select parameters to include — include_pars","title":"Select parameters to include — include_pars","text":"Helper function amend vector parameter names hierarchical level shortcuts.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/include_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select parameters to include — include_pars","text":"","code":"include_pars(   pars,   stan_model,   SR_fun,   RRS,   par_models,   include,   log_lik = FALSE )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/include_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select parameters to include — include_pars","text":"pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\"). Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. stan_model Character string specifying salmonIPM model fit. concise alternative specifying model, life_cycle, pool_pops override arguments. SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. log_lik Logical scalar indicating whether pointwise log-likelihood saved, e.g. later use loo::loo().","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/include_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select parameters to include — include_pars","text":"character vector amended pars.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/launch_shinystan.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the ShinyStan GUI with salmonIPM models — launch_shinystan.salmonIPMfit","title":"Launch the ShinyStan GUI with salmonIPM models — launch_shinystan.salmonIPMfit","text":"ShinyStan interface provides visual numerical summaries model parameters convergence diagnostics.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/launch_shinystan.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the ShinyStan GUI with salmonIPM models — launch_shinystan.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' launch_shinystan(object, ...)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/launch_shinystan.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the ShinyStan GUI with salmonIPM models — launch_shinystan.salmonIPMfit","text":"object salmonIPMfit object. ... Additional arguments passed launch_shinystan.default.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/log_lik.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Pointwise log-likelihood matrix — log_lik.salmonIPMfit","title":"Pointwise log-likelihood matrix — log_lik.salmonIPMfit","text":"log_lik method salmonIPMfit objects returns pointwise log-likelihood matrix.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/log_lik.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pointwise log-likelihood matrix — log_lik.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' log_lik(object, ...)  # S3 method for class 'salmonIPMfit' nsamples(object, ...)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/log_lik.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pointwise log-likelihood matrix — log_lik.salmonIPMfit","text":"object object class salmonIPMfit includes samples pointwise log-likelihood LL, e.g. log_lik set TRUE calling salmonIPM(). ... Currently ignored.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/log_lik.salmonIPMfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pointwise log-likelihood matrix — log_lik.salmonIPMfit","text":"N_samples N matrix containing pointwise log-likelihood, N_samples number post-warmup posterior draws N number cases (.e. rows) fish_data. Note includes likelihood components observations fish_data, include likelihood auxiliary data types. , well likelihood components specific data types fish_data, can extracted .matrix() monitored using pars argument salmonIPM().","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/loo.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Information criteria and cross-validation — loo.salmonIPMfit","title":"Information criteria and cross-validation — loo.salmonIPMfit","text":"Compute approximate leave-one-cross-validation (LOO, LOOIC) scores using loo-package. See loo::loo() information.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/loo.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information criteria and cross-validation — loo.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' loo(x, ...)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/loo.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information criteria and cross-validation — loo.salmonIPMfit","text":"x fitted model object class salmonIPMfit. ... Additional arguments passed S3 generic.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/loo.salmonIPMfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information criteria and cross-validation — loo.salmonIPMfit","text":"structure loo objects returned described loo::loo().","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_defs.html","id":null,"dir":"Reference","previous_headings":"","what":"Definitions of parameters and states in a salmonIPM model — par_defs","title":"Definitions of parameters and states in a salmonIPM model — par_defs","text":"Returns data frame parameters types, dimensions definitions specified model.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_defs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definitions of parameters and states in a salmonIPM model — par_defs","text":"","code":"par_defs(   stan_model = c(\"IPM_SS_np\", \"IPM_SSiter_np\", \"IPM_SS_pp\", \"IPM_SSiter_pp\",     \"IPM_SMS_np\", \"IPM_SMS_pp\", \"IPM_SMaS_np\", \"IPM_LCRchum_pp\", \"RR_SS_np\", \"RR_SS_pp\"),   pars = c(\"all\", \"hyper\", \"group\", \"states\", \"ppd\"),   SR_fun = \"BH\",   RRS = \"none\",   par_models = NULL,   object = NULL )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_defs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definitions of parameters and states in a salmonIPM model — par_defs","text":"stan_model Character string giving name model. See salmonIPM() details. pars optional character vector specifying one hierarchical levels parameters. Options \"\" (default), \"hyper\" (top-level hyperparameters given priors), \"group\" (pop- year-level parameters shared multiple states), \"states\" (lowest level, corresponding unique rows fish_data), \"ppd\" (model == \"RR\", observation-level predictions drawn posterior predictive distribution). SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). object salmonIPMfit object. provided SR_fun, RRS par_models needed ignored; values extracted object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_defs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Definitions of parameters and states in a salmonIPM model — par_defs","text":"Data frame columns listing parameters /states definitions, types dimensions.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_model_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to construct covariate model matrices from a list of two-sided formulas. — par_model_matrix","title":"Helper function to construct covariate model matrices from a list of two-sided formulas. — par_model_matrix","text":"Helper function construct covariate model matrices list two-sided formulas.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_model_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to construct covariate model matrices from a list of two-sided formulas. — par_model_matrix","text":"","code":"par_model_matrix(par_models, fish_data, center = TRUE, scale = TRUE)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_model_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to construct covariate model matrices from a list of two-sided formulas. — par_model_matrix","text":"par_models list two-sided formulas form theta ~ t1 + ... + tK, theta parameter state salmonIPM model accepts covariates t1 ... tK terms involving variables fish_data; see salmonIPM() details. fish_data See salmonIPM(). particular, columns ... may used right-hand side formulas par_models. center Logical indicating whether terms model matrices constructed fish_data using formulas par_models centered. usually recommended use default (TRUE) baseline parameter estimate applies predictors sample means, cases factor predictors center = FALSE may appropriate. scale Logical indicating whether terms model matrices constructed fish_data using formulas par_models scaled column SDs 1.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/par_model_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to construct covariate model matrices from a list of two-sided formulas. — par_model_matrix","text":"named list model matrices corresponding elements par_models.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/plot_prior_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","title":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","text":"Plot posterior draws, analytical prior distributions, (optionally) true values hyperparameters fitted salmonIPM model.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/plot_prior_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","text":"","code":"plot_prior_posterior(object, pars = NULL, include = TRUE, true = NULL)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/plot_prior_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","text":"object object class salmonIPMfit prior information stored prior.info. pars Character vector specifying hyperparameters plot. default top-level hyperparameters, .e. parameters given priors. include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. FALSE, entire multidimensional parameters can excluded, rather particular elements . likely useful excluding large correlation matrices plot. true Named list containing true hyperparameter values used generate pseudo-data object fitted. See pars argument simIPM() structure list.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/plot_prior_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","text":"ggplot object. result assigned object, automatically plotted.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/plot_prior_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot prior and posterior distributions of model hyperparameters — plot_prior_posterior","text":"hyperparameter pars, posterior draws plotted density histogram prior PDF overlaid. true provided, known parameter value used simulate pseudo-data model fit shown vertical line.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/print.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for salmonIPMfit objects — print.salmonIPMfit","title":"Print method for salmonIPMfit objects — print.salmonIPMfit","text":"Print information fitted model posterior summary parameters interest estimated samples included salmonIPMfit object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/print.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for salmonIPMfit objects — print.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' print(   x,   pars = \"hyper\",   include = TRUE,   probs = c(0.05, 0.5, 0.95),   digits = 2,   ... )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/print.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for salmonIPMfit objects — print.salmonIPMfit","text":"x object class salmonIPMfit. pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\") summarize. Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. default \"hyper\", .e. top-level hyperparameters given priors. include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. FALSE, entire multidimensional parameters can excluded, rather particular elements . probs numeric vector posterior quantiles print. default c(0.05, 0.5, 0.95), .e. median 90% credible interval. digits Number decimal places print, defaulting 2. Applies quantities effective sample size, always rounded nearest integer. ... Currently ignored.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/print.salmonIPMfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for salmonIPMfit objects — print.salmonIPMfit","text":"pars includes correlation matrices, lower triangular elements returned. avoids redundant summary output well false positive diagnostic results bulk-ESS Rhat NaN diagonal elements.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/print.salmonIPMfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for salmonIPMfit objects — print.salmonIPMfit","text":"","code":"# <under construction>"},{"path":"https://ebuhle.github.io/salmonIPM/reference/priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior distributions — priors","title":"Prior distributions — priors","text":"functions used specify priors selected (hyper)parameters salmonIPM models. default priors used various models intended weakly informative, provide moderate regularization help stabilize sampling. Priors scaling parameters, e.g. Rmax mu_Rmax, automatically adjusted weakly informative consistent observed marginal distribution population density. many applications defaults perform well, external information included fish_data available, can incorporated via user-specified priors key parameters. See Details table available prior options.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior distributions — priors","text":"","code":"normal(mean = 0, sd = 1)  gnormal(mean = 0, scale = 1, shape = 1)  lognormal(meanlog = 0, sdlog = 1)  beta(a = 1, b = 1)  dirichlet(concentration = 1)  uniform(lb = 0, ub = 1)  lkj_corr(eta = 1)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior distributions — priors","text":"mean Prior mean normal generalized normal distribution. sd Prior standard deviation normal distribution. scale Prior scale generalized normal distribution. Equivalent alpha gnorm, renamed avoid confusion spawner-recruit intrinsic productivity parameter. shape Prior shape generalized normal distribution. Equivalent beta gnorm renamed avoid confusion covariate slopes. meanlog, sdlog Prior log-scale mean standard deviation, respectively, lognormal distribution. See Lognormal. , b Prior shape parameters beta distribution. Equivalent shape1 shape2, respectively, Beta. concentration Vector shape parameters Dirichlet distribution. Equivalent alpha gtools::dirichlet, renamed avoid confusion spawner-recruit intrinsic productivity parameter. lb, ub Lower upper bounds uniform distribution. eta Prior shape parameter LKJ distribution correlation matrices.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior distributions — priors","text":"named list used internally salmonIPM model-fitting summary functions.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/priors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior distributions — priors","text":"table shows parameters model can given user-specified priors corresponding distributions. Note users can modify prior parameters distribution families; attempting latter result error. Priors parameters bounded positive real line (e.g. tau, tau_S tau_M) automatically left-truncated zero. parameters modeled functions covariates using par_models argument salmonIPM(), specified prior applies predictors sample means. RRS != \"none\", global spawner-recruit parameters must replaced W H counterparts; e.g. RRS == \"alpha\" instead prior alpha one specify priors alpha_W alpha_H. former provided, effect. See salmonIPM() details RRS argument. generalized normal density shape >> 1 useful platykurtic \"soft-uniform\" prior regularize posterior away regions parameter space may cause computational sampling problems. case spawner smolt observation error log-SDs, default prior bounds ≳ 0.1. uniform distribution LKJ distribution  included internal use; currently correlation matrices user-specified priors.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/prior_summary.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","title":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","text":"Print summary priors hyperparameters fitted salmonIPMfit model object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/prior_summary.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' prior_summary(object, digits = 2, ...)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/prior_summary.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","text":"object object class salmonIPMfit prior information stored prior.info. digits Number decimal places print. ... Currently ignored.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/prior_summary.salmonIPMfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","text":"character vector containing prior summary information.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/prior_summary.salmonIPMfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize the priors used in a salmonIPM model — prior_summary.salmonIPMfit","text":"function called mainly side effect printing prior summary. character vector printed returned invisibly, information can found usable form object$prior.info. Priors identified user-specifiable hard-coded printed output. Note correlation matrices given lkj_corr priors, actual Stan implementation uses efficient lower Cholesky factor version LKJ distribution.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/run_recon.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform run reconstruction on brood table data — run_recon","title":"Perform run reconstruction on brood table data — run_recon","text":"Perform run reconstruction brood table data","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/run_recon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform run reconstruction on brood table data — run_recon","text":"","code":"run_recon(fish_data, age_F = NULL, age_B = NULL)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/run_recon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform run reconstruction on brood table data — run_recon","text":"fish_data Data frame includes following columns, particular order except noted: pop  Numeric, factor character population ID. year  Numeric variable giving year fish spawned (.e., brood year). Spawning habitat size (either stream length area). often time-invariant within population, need . S_obs  Total number (density) wild hatchery-origin spawners. n_age[min_age]_obs...n_age[max_age]_obs  Multiple columns observed spawner age frequencies (.e., counts), [min_age] [max_age] numeral age years (total, ocean age) youngest oldest spawners, respectively. Complex age structures Gilbert-Rich maiden-kelt supported. n_W_obs  Observed frequency natural-origin spawners. n_H_obs  Observed frequency hatchery-origin spawners. F_rate  Total harvest rate (proportion) natural-origin fish. B_take_obs  Number adults taken hatchery broodstock. age_F Logical 0/1 vector length N_age indicating whether adult age fully (non)selected fishery. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_B Logical 0/1 vector length N_age indicating whether adult age fully (non)selected broodstock collection. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1).","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/run_recon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform run reconstruction on brood table data — run_recon","text":"data frame following columns, simply replicated fish_data: pop  See . year  See .  See . S_obs  See . q_age[minAge]_obs...q_age[maxAge]_obs  Multiple columns spawner age proportions corresponding frequencies fish_data. p_age_minAge...p_age_maxAge  Multiple columns recruit age proportions brood year. p_HOS_obs  Proportion hatchery-origin spawners. F_rate  See . B_take_obs  See . R_obs  Total natural-origin recruits brood year row.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'salmonIPM' package. — salmonIPM-package","title":"The 'salmonIPM' package. — salmonIPM-package","text":"Fits integrated population models (IPMs) run-reconstruction regressions anadromous Pacific salmonid population dynamics using hierarchical Bayesian framework implemented Stan. Various models available, representing alternative life-history structures independent hierarchically pooled populations. Users can specify stage-specific covariate effects hyper-priors using formula syntax.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'salmonIPM' package. — salmonIPM-package","text":"Stan Development Team (2020). RStan: R interface Stan. R package version 2.19.3. https://mc-stan.org","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'salmonIPM' package. — salmonIPM-package","text":"Maintainer: Eric Buhle eric.buhle@noaa.gov Authors: Mark Scheuerell scheuerl@uw.edu","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an IPM or run-reconstruction regression model — salmonIPM","title":"Fit an IPM or run-reconstruction regression model — salmonIPM","text":"Fits integrated population models (IPMs) run-reconstruction regressions anadromous Pacific salmonid population dynamics using hierarchical Bayesian framework implemented Stan. Various models available, representing alternative life-history structures independent hierarchically pooled populations. Users can specify stage-specific covariate effects hyper-priors using formula syntax.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an IPM or run-reconstruction regression model — salmonIPM","text":"","code":"salmonIPM(   stan_model = paste(model, life_cycle, ifelse(pool_pops, \"pp\", \"np\"), sep = \"_\"),   model = c(\"IPM\", \"RR\"),   life_cycle = c(\"SS\", \"SSiter\", \"SMS\", \"SMaS\", \"LCRchum\"),   ages = NULL,   pool_pops = nlevels(factor(fish_data$pop)) > 1,   SR_fun = c(\"BH\", \"B-H\", \"bh\", \"b-h\", \"Ricker\", \"ricker\", \"exp\"),   RRS = \"none\",   par_models = NULL,   center = TRUE,   scale = TRUE,   age_F = NULL,   age_B = NULL,   age_S_obs = NULL,   age_S_eff = NULL,   conditionGRonMS = FALSE,   priors = NULL,   fish_data,   fecundity_data = NULL,   pars = \"all\",   include = TRUE,   log_lik = FALSE,   init = NULL,   chains = 4,   iter = 2000,   warmup = floor(iter/2),   thin = 1,   cores = parallel::detectCores(logical = FALSE),   control = NULL,   save_data = FALSE,   ... )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an IPM or run-reconstruction regression model — salmonIPM","text":"stan_model Character string specifying salmonIPM model fit. concise alternative specifying model, life_cycle, pool_pops override arguments. model Either \"IPM\" \"RR\", indicating whether fit IPM run-reconstruction regression model. life_cycle Character string indicating life-cycle model fit. One following options (must \"SS\" model == \"RR\"): \"SS\"  Spawner--spawner (default) \"SSiter\" Spawner--spawner iteroparity (alias \"SS\" stan_data(\"IPM_SS_[x]p\", fish_data = fish_data)$iter set 1) \"SMS\"  Spawner-smolt-spawner fixed smolt age \"SMaS\"  Spawner-smolt-spawner multiple smolt age classes (currently available pool_pops == FALSE) \"LCRchum\"  Customized spawner-smolt-spawner model Lower Columbia River chum (pool_pops == TRUE) ages multi-stage models, named list giving ages years fixed-age subadult life stages. needed IPM_SMaS_np case smolt age structure provided fish_data. pool_pops Logical defaulting TRUE multiple populations present fish_data FALSE otherwise, indicating whether model multiple populations hierarchically rather independent \"fixed effects\". possible fit model multiple populations simultaneously even though share parameters; indeed efficient fitting one time calculations vectorized warmup shared. SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). center Logical indicating whether terms model matrices constructed fish_data using formulas par_models centered. usually recommended use default (TRUE) baseline parameter estimate applies predictors sample means, cases factor predictors center = FALSE may appropriate. combining categorical numeric predictors, latter can centered scaled prior modeling. scale Logical indicating whether model matrices constructed fish_data using formulas par_models scaled column SDs 1. Unit-scaling predictors less critical centering, advisable variables scales far 1. age_F Logical 0/1 vector length N_age indicating whether adult age fully (non)selected fishery. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_B Logical 0/1 vector length N_age indicating whether adult age fully (non)selected broodstock collection. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_S_obs stan_model == \"IPM_SS_pp\", logical 0/1 integer vector indicating, adult age, whether observed total spawner data includes age. default treat S_obs including spawners ages. option may useful certain age classes counted. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_S_eff stan_model == \"IPM_SS_pp\", logical 0/1 vector indicating, adult age, whether spawners age contribute reproduction. can used, e.g., exclude jacks effective breeding population. default include spawners ages. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). conditionGRonMS life_cycle == \"SMaS\", logical indicating whether Gilbert-Rich age frequencies n_GRage_obs fish_data conditioned ocean age. FALSE (default) counts assumed sampled randomly population. TRUE, assumed number spawners ocean age (e.g., jacks vs 1-ocean) arbitrary, smolt (FW) age randomly sampled within ocean age; .e., smolt age x ocean age contingency table, cell frequencies conditioned column totals. priors Optional list two-sided formulas form theta ~ distribution(params), theta hyperparameter can take user-specified prior distribution() canonical prior family. See priors details available parameters model corresponding families. hyperparameters given explicit priors use default values prior params. fish_data Data frame row corresponds unique population x year, includes following colnames particular order except noted (namely age- origin-composition data): pop  Required factor, numeric, character population name ID. coerced factor, recommended factor concise, informative levels, e.g. \"Johnson Cr\". especially true multiple populations, case levels(factor(pop)) can used interpreting plotting posterior draws. year  Required numeric integer giving calendar year corresponding observation. Note fish_data indexed brood year. brood table run reconstruction, see run_recon().  Required spawning habitat size (either stream length area). often time-invariant within population, need . Habitat size used internally convert population size scaling parameters (e.g., Rmax) density abundance, == 1 rescaling done parameters units fish. fine pool_pops == FALSE, hierarchical multi-population models advisable provide habitat size assumption hierarchical exchangeability valid. M_obs  life_cycle %% c(\"SMS\",\"SMaS\",\"LCRchum\"), observed number wild-origin smolts (integer numeric). Missing / unknown observations coded NA. tau_M_obs  life_cycle == \"LCRchum\",  known lognormal observation error SDs smolt abundance. Missing values (NA) imputed. downstream_trap  life_cycle == \"LCRchum\", row indices corresponding downstream smolt trap different population whose catch additionally includes smolts produced one upstream populations, assuming extra mortality en route. upstream population can one downstream trap (addition , ) trap can multiple upstream populations. downstream_trap[] == j, M_downstream[j] = M[j] + M[]. .na(downstream_trap[]) M[] double-counted. n_Mage[min_Mage]_obs...n_Mage[max_Mage]_obs  life_cycle == \"SMaS\", multiple columns observed smolt age sample frequencies (counts), [min_Mage] [max_Mage] numeral age years youngest oldest smolts, respectively. Note age measured calendar years brood year (.e., Gilbert-Rich system). S_obs  Required observed total escapement wild hatchery-origin spawners (integer numeric). Missing / unknown observations coded NA. tau_S_obs  life_cycle == \"LCRchum\", known lognormal observation error SDs spawner abundance. Missing values (NA) imputed. n_age[min_age]_obs ... n_age[max_age]_obs  Integer columns observed spawner age sample frequencies (counts), [min_age] [max_age] numeral age years (total, ocean age) youngest oldest spawners. Required unless life_cycle %% c(\"SSiter\",\"SMaS\"), case ignored. Note n_age_obs compositional data types must contain NA. sample included individuals given category samples collected, observed frequency 0. n_age[min_age]M_obs ... n_age[max_age]M_obs n_age[min_age + 1]K_obs ... n_age[max_age + 1]K_obs, life_cycle == \"SSiter\", integer columns observed first-time (maiden) repeat (former kelt) spawner age frequencies [min_age] [max_age] total age years youngest oldest maiden spawners, respectively. Contiguous maiden age columns denoted M followed equal number contiguous repeat age columns denoted K, repeat age 1 year greater corresponding maiden age. maximum repeat age class plus-group, .e. includes repeat spawners age max_age + 1 older. n_MSage[min_MSage]_obs ... n_MSage[max_MSage]_obs  life_cycle == \"SMaS\", integer columns observed spawner ocean age sample frequencies, [min_MSage] [max_MSage] youngest oldest ocean age years, respectively. Nonzero ocean age frequencies required conditionGRonMS == TRUE (columns must present case). conditionGRonMS == FALSE, n_MSage_obs represents independent samples, simply (implicit) ocean-age marginal totals n_GRage_obs. n_GRage[min_age]_[min_Mage]_obs ... n_GRage[max_age]_[max_Mage]_obs  life_cycle == \"SMaS\", integer columns observed Gilbert-Rich age sample frequencies, varying fastest smolt age (min_Mage:max_Mage) total age (min_age:max_age). example, life history subyearling yearling smolts ocean ages 2:3 column names c(\"n_GRage_3_1_obs\", \"n_GRage_4_1_obs\", \"n_GRage_4_2_obs\",   \"n_GRage_5_2_obs\"). combinations smolt age (implicitly) ocean age must represented, even never observed. n_W_obs  Required integer observed sample frequencies natural-origin spawners. n_H_obs  Required integer observed sample frequencies hatchery-origin spawners. fit_p_HOS  Logical 0/1 indicating row fish_data whether model estimate p_HOS[] > 0. Required model == \"IPM\" unless life_cycle == \"LCRchum\". stan_data() give warning row meets either two conditions: .logical(fit_p_HOS[]) == FALSE n_W_obs[] + n_H_obs[] > 0, .logical(fit_p_HOS[]) == TRUE n_W_obs[] + n_H_obs[] == 0. first means HOR observed, accounting risks biasing estimated parameters states (aka \"masking\"). second means model asked estimate p_HOS[] case-specific hatchery / wild origin-frequency data. p_HOS[] priori independent parameter (\"fixed effect\"), difficult task. may shared information via process model indirectly inform , likely lead poor estimates sampling problems. n_O0_obs n_O[which_O_pop[1]]_obs ... n_O[which_O_pop[N_O_pop]]_obs life_cycle = \"LCRchum\", multiple columns observed origin sample frequencies. first column, named \"O\" origin \"0\" null / naught, refers unknown natural origin, .e. unmarked spawners presumed . next N_O_pop columns numbered levels factor(fish_data$pop) corresponding set known-origin populations. Typically hatcheries, may identified PIT tags, parentage-based tagging, means. LCRchum model uses origin-composition observations infer dispersal rates hatchery (known-origin) fish, n_W_obs (n_O0_obs assuming known origins hatcheries) n_H_obs (equal sum(n_O_obs[-1]) case) needed, although can included fish_data informational purposes post-processing draws. Likewise fit_p_HOS needed ignored. n_M_obs  life_cycle == \"LCRchum\", integer observed frequencies male spawners. n_F_obs  life_cycle == \"LCRchum\", integer observed frequencies female spawners. p_G_obs  life_cycle == \"LCRchum\", observed proportion (assumed known without error) female spawners \"green\", .e. fully fecund. F_rate  Total harvest rate (proportion) natural-origin fish. Required models, even values 0. B_take_obs  Number adults taken hatchery broodstock. Required models, even values 0. S_add_obs  stan_model == \"IPM_LCRchum_pp\", number adults translocated population. ...  Additional variables used covariates. can vary spatially /temporally. fecundity_data life_cycle == \"LCRchum\", data frame following columns, representing observations fecundity row corresponding female: age_E  Female age years. E_obs  Observed fecundity. pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\") saved. default save parameters. Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. parameters explicitly named, user make sure exist stan_model, e.g. calling stan_pars(stan_model). include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. FALSE, entire multidimensional parameters can excluded, rather particular elements . log_lik Logical scalar indicating whether pointwise log-likelihood saved, e.g. later use loo::loo(). init list named lists initial values passed rstan::sampling(). default (recommended) NULL randomly generates initial values chain given data model using stan_init(). chains Positive integer specifying number HMC chains; see rstan::sampling(). iter Positive integer specifying number iterations chain (including warmup); see rstan::sampling(). warmup Positive integer specifying number warmup iterations per chain. step-size adaptation enabled (default), also controls number iterations adaptation run; hence warmup samples used inference. number warmup iterations larger iter. See rstan::sampling(). thin Positive integer specifying period saving samples. default 1, usually recommended value. See rstan::sampling(). cores Number cores use running chains parallel. Defaults number physical cores available. See rstan::sampling(). control named list options control sampler behavior. See rstan::stan() details available options. contrast rstan, default value adapt_delta salmonIPM increased 0.95 found necessary minimize divergences cases. save_data Logical scalar defaulting FALSE indicating whether save data passed Stan stan_data() salmonIPMfit object. Can useful posterior predictive checking reproducibility, cost increased object size. ... Additional arguments pass rstan::sampling().","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an IPM or run-reconstruction regression model — salmonIPM","text":"object class salmonIPMfit representing fitted model. See salmonIPMfit details.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an IPM or run-reconstruction regression model — salmonIPM","text":"following parameters states can modeled functions covariates using argument par_models. response distribution families link functions automatically implemented need log()- qlogis()-transform left-hand side formula, although syntax also work (LHS found fish_data just syntactic sugar determine parameter name). design matrices passed Stan model include intercept, necessary manually remove RHS; present default, par_model_matrix() automatically remove . regression model, user must ensure effects specified estimable given design matrix. example, effect spatially varying time-invariant predictor identifiable np model populations modeled independently.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPMfit-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted model objects: the salmonIPMfit class — salmonIPMfit-class","title":"Fitted model objects: the salmonIPMfit class — salmonIPMfit-class","text":"Models fitted salmonIPM-package objects S3 class salmonIPMfit. Elements generally mirror named arguments passed constructor function salmonIPM() mostly self-explanatory, except prior.info named list whose elements lists returned priors functions hyperparameters model, whether modifiable (user-specified default) hard-coded.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPMfit-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted model objects: the salmonIPMfit class — salmonIPMfit-class","text":"","code":"salmonIPMfit(   stanfit,   call,   stan_model,   model,   life_cycle,   ages,   pool_pops,   SR_fun,   RRS,   par_models,   center,   scale,   age_S_obs,   age_S_eff,   conditionGRonMS,   prior.info,   stan_data,   dims,   pops,   elapsed_time,   salmonIPM_version )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPMfit-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted model objects: the salmonIPMfit class — salmonIPMfit-class","text":"stanfit object class stanfit. call object class call containing call salmonIPM(). stan_model Character string specifying salmonIPM model fit. concise alternative specifying model, life_cycle, pool_pops override arguments. model Either \"IPM\" \"RR\", indicating whether fit IPM run-reconstruction regression model. life_cycle Character string indicating life-cycle model fit. One following options (must \"SS\" model == \"RR\"): \"SS\"  Spawner--spawner (default) \"SSiter\" Spawner--spawner iteroparity (alias \"SS\" stan_data(\"IPM_SS_[x]p\", fish_data = fish_data)$iter set 1) \"SMS\"  Spawner-smolt-spawner fixed smolt age \"SMaS\"  Spawner-smolt-spawner multiple smolt age classes (currently available pool_pops == FALSE) \"LCRchum\"  Customized spawner-smolt-spawner model Lower Columbia River chum (pool_pops == TRUE) ages multi-stage models, named list giving ages years fixed-age subadult life stages. needed IPM_SMaS_np case smolt age structure provided fish_data. pool_pops Logical defaulting TRUE multiple populations present fish_data FALSE otherwise, indicating whether model multiple populations hierarchically rather independent \"fixed effects\". possible fit model multiple populations simultaneously even though share parameters; indeed efficient fitting one time calculations vectorized warmup shared. SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). center Logical indicating whether terms model matrices constructed fish_data using formulas par_models centered. usually recommended use default (TRUE) baseline parameter estimate applies predictors sample means, cases factor predictors center = FALSE may appropriate. combining categorical numeric predictors, latter can centered scaled prior modeling. scale Logical indicating whether model matrices constructed fish_data using formulas par_models scaled column SDs 1. Unit-scaling predictors less critical centering, advisable variables scales far 1. age_S_obs stan_model == \"IPM_SS_pp\", logical 0/1 integer vector indicating, adult age, whether observed total spawner data includes age. default treat S_obs including spawners ages. option may useful certain age classes counted. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_S_eff stan_model == \"IPM_SS_pp\", logical 0/1 vector indicating, adult age, whether spawners age contribute reproduction. can used, e.g., exclude jacks effective breeding population. default include spawners ages. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). conditionGRonMS life_cycle == \"SMaS\", logical indicating whether Gilbert-Rich age frequencies n_GRage_obs fish_data conditioned ocean age. FALSE (default) counts assumed sampled randomly population. TRUE, assumed number spawners ocean age (e.g., jacks vs 1-ocean) arbitrary, smolt (FW) age randomly sampled within ocean age; .e., smolt age x ocean age contingency table, cell frequencies conditioned column totals. prior.info named list priors pars. element named list representing prior format returned functions priors additional attribute \"type\". stan_data Optional named list input data passed rstan::sampling() fitting IPM, returned stan_data(). Stored salmonIPM() called save_data = TRUE, otherwise NULL. dims named list data dimensions, including number cases (.e. rows fish_data) N, number populations N_pop, number years N_year, model-specific elements. pops Character vector giving unique elements fish_data$pop. elapsed_time Wall time (s) fit model, returned get_elapsed_time(). salmonIPM_version version salmonIPM used fit model.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/salmonIPMfit-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted model objects: the salmonIPMfit class — salmonIPMfit-class","text":"salmonIPMfit object elements described .","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/simIPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from a salmonid IPM — simIPM","title":"Simulate data from a salmonid IPM — simIPM","text":"Generate pseudo-data, group-level parameters, states specified salmonIPM integrated population model given values hyperparameters. may useful, e.g., simulation-based calibration model sensitivity checking. suitable simulating data fitted model, initial states drawn randomly rather passed .","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/simIPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from a salmonid IPM — simIPM","text":"","code":"simIPM(   life_cycle = c(\"SS\", \"SSiter\", \"SMS\"),   SR_fun = c(\"BH\", \"B-H\", \"bh\", \"b-h\", \"Ricker\", \"ricker\", \"exp\"),   RRS = \"none\",   N_age,   max_age,   ages = NULL,   pars,   par_models = NULL,   center = TRUE,   scale = TRUE,   age_F = NULL,   age_B = NULL,   fish_data )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/simIPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from a salmonid IPM — simIPM","text":"life_cycle Character string indicating life-cycle model simulate. Currently available options spawner--spawner (\"SS\", default), iteroparous spawner--spawner (\"SSiter\"), spawner-smolt-spawner (\"SMS\"). SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. N_age Number (maiden) adult age classes. max_age Oldest (maiden) adult age class. ages multi-stage models, named list giving fixed ages years subadult life stages. example, life_cycle == \"SMS\", list(M = ) integer smolt age. pars Named list (hyper)parameters used simulations: mu_alpha  Hyper-mean log intrinsic productivity. mu_alpha_W,mu_alpha_H Hyper-means log intrinsic productivity wild- hatchery-origin spawners, respectively. differ, must specified mu_alpha must used (conversely). beta_alpha  Vector regression coefficients log intrinsic productivity. Must specified par_models includes alpha ~ ...; otherwise ignored may omitted. sigma_alpha  Hyper-SD log intrinsic productivity. mu_Rmax  life_cycle == \"SS\", hyper-mean log maximum recruitment. mu_Rmax_W,mu_Rmax_H Hyper-means log maximum recruitment wild- hatchery-origin spawners, respectively. differ, must specified mu_Rmax must used (conversely). beta_Rmax  life_cycle == \"SS\", vector regression coefficients log maximum recruitment. Must specified par_models includes Rmax ~ ...; otherwise ignored may omitted. sigma_Rmax  life_cycle == \"SS\", hyper-SD log maximum recruitment. rho_alphaRmax  life_cycle == \"SS\", correlation population-level log(alpha) log(Rmax). rho_WH either mu_alpha mu_[R|M]max differ rearing type, correlation respective _W _H population-level parameters. beta_R  life_cycle == \"SS\", vector regression coefficients log recruitment. Must specified par_models includes R ~ ...; otherwise ignored may omitted. rho_R  life_cycle == \"SS\", AR(1) coefficient brood-year log productivity anomalies. sigma_year_R  life_cycle == \"SS\", hyper-SD brood-year log productivity anomalies. sigma_R  life_cycle == \"SS\", unique recruitment process error SD. mu_Mmax  life_cycle == \"SMS\", hyper-mean log maximum smolt recruitment. beta_Mmax  life_cycle == \"SMS\", vector regression coefficients log maximum smolt recruitment. mu_Mmax_W,mu_Mmax_H Hyper-means log maximum smolt recruitment wild- hatchery-origin spawners, respectively. differ, must specified mu_Mmax must used (conversely). sigma_Mmax  life_cycle == \"SMS\", hyper-SD log maximum smolt recruitment. rho_alphaMmax  life_cycle == \"SMS\", correlation log(alpha) log(Mmax). beta_M  life_cycle == \"SMS\", vector regression coefficients log smolt recruitment. Must specified par_models includes M ~ ...; otherwise ignored may omitted. rho_M  life_cycle == \"SMS\", AR(1) coefficient spawner-smolt log productivity anomalies. sigma_year_M  life_cycle == \"SMS\", process error SD spawner-smolt log productivity anomalies. sigma_M  life_cycle == \"SMS\", SD unique spawner-smolt productivity process errors. mu_MS  life_cycle == \"SMS\", mean SAR. beta_MS  life_cycle == \"SMS\", vector regression coefficients logit SAR anomalies. Must specified par_models includes s_MS ~ ...; otherwise ignored may omitted. rho_MS  life_cycle == \"SMS\", AR(1) coefficient logit SAR anomalies. sigma_year_MS  life_cycle == \"SMS\", process error SD logit SAR anomalies. sigma_MS  life_cycle == \"SMS\", SD unique logit SAR process errors. mu_p  Among-population mean simplex age distributions. sigma_pop_p  Vector among-population SDs mean log-ratio age distributions. R_pop_p  Among-population correlation matrix mean log-ratio age distributions. sigma_pop_p  Vector SDs log-ratio cohort age distributions. R_pop_p  Correlation matrix cohort log-ratio age distributions. sigma_p  Vector SDs log-ratio cohort age distributions. R_p  Correlation matrix cohort log-ratio age distributions. mu_SS  life_cycle == \"SSiter\", mean kelt survival. beta_SS  life_cycle == \"SSiter\", vector regression coefficients logit kelt survival. Must specified par_models includes s_SS ~ ...; otherwise ignored may omitted. rho_SS  life_cycle == \"SSiter\", AR(1) coefficient annual logit kelt survival anomalies. sigma_year_SS  life_cycle == \"SSiter\", process error SD annual logit kelt survival anomalies. sigma_SS  life_cycle == \"SSiter\", SD unique logit kelt survival process errors. tau  life_cycle != \"SMS\", spawner observation error SD. tau_M  life_cycle == \"SMS\", smolt observation error SD. tau_S  life_cycle == \"SMS\", pawner observation error SD. S_init  Scalar giving median initial spawning population size. S_init S_init_K specified, latter ignored. S_init_K  Scalar giving median initial spawning population size fraction carrying capacity. Note alpha < 1, K undefined specifying S_init_K result error. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). center Logical indicating whether terms model matrices constructed fish_data using formulas par_models centered. usually recommended use default (TRUE) baseline parameter estimate applies predictors sample means, cases factor predictors center = FALSE may appropriate. combining categorical numeric predictors, latter can centered scaled prior modeling. scale Logical indicating whether model matrices constructed fish_data using formulas par_models scaled column SDs 1. Unit-scaling predictors less critical centering, advisable variables scales far 1. age_F Logical 0/1 vector length N_age indicating whether adult age fully (non)selected fishery. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_B Logical 0/1 vector length N_age indicating whether adult age fully (non)selected broodstock collection. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). fish_data Data frame columns: pop  Numeric, character factor population ID. year  Numeric integer giving year fish spawned (.e., brood year).  Spawning habitat size (either stream length area). often time-invariant within population, need . p_HOS  True fraction hatchery-origin spawners. F_rate  Total harvest rate (proportion) natural-origin fish. B_rate  Adult hatchery broodstock removal rate. n_age_obs  Number spawners sampled age composition. n_HW_obs  Number spawners sampled hatchery / wild origin. ...  Additional variables used covariates.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/simIPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from a salmonid IPM — simIPM","text":"named list elements sim_dat  data frame containing simulated data structure (see salmonIPM()) appropriate specified life_cycle, ready passed salmonIPM(). pars_out  named list hyperparameters, group-level parameters, states used generating pseudo-data.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":null,"dir":"Reference","previous_headings":"","what":"Spawner-recruit functions — SR","title":"Spawner-recruit functions — SR","text":"Compute recruitment given spawner abundance, spawner-recruit function parameters.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spawner-recruit functions — SR","text":"","code":"SR(   SR_fun = c(\"BH\", \"B-H\", \"bh\", \"b-h\", \"Ricker\", \"ricker\", \"exp\"),   alpha = NULL,   alpha_W = NULL,   alpha_H = NULL,   Rmax = NULL,   Rmax_W = NULL,   Rmax_H = NULL,   S = NULL,   S_W = NULL,   S_H = NULL,   A = 1,   R_per_S = FALSE )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spawner-recruit functions — SR","text":"SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. alpha Numeric vector, matrix, data frame, posterior::rvar(), draws intrinsic productivity (.e., recruits per spawner zero spawner density; slope spawner-recruit function origin). alpha_W, alpha_H Numeric vectors, matrices, data frames, posterior::rvar() draws intrinsic productivity wild- hatchery-origin spawners, respectively. differ, must specified alpha must used (conversely). Rmax Numeric vector, matrix, data frame, posterior::rvar(), draws maximum recruitment per unit habitat (length area). corresponds asymptote Beverton-Holt mode Ricker. Rmax_W, Rmax_H Numeric vectors, matrices, data frames, posterior::rvar() draws maximum recruitment per unit habitat wild- hatchery-origin spawners, respectively. differ, must specified Rmax must used (conversely). S Numeric vector, matrix, data frame, posterior::rvar(), draws spawner abundance. S_W, S_H Numeric vectors, matrices, data frames, posterior::rvar() draws wild- hatchery-origin spawner abundance, respectively. Must specified either alpha Rmax differ rearing type, case S must used (conversely). Numeric vector, matrix, data frame, posterior::rvar(), draws spawning habitat size (either stream length area), used standardize Rmax. default 1, case Rmax units abundance (also density). R_per_S Logical indicating whether return recruits per spawner rather recruits (default).","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spawner-recruit functions — SR","text":"vector, matrix, data frame, posterior::rvar() draws, depending argument types, containing either recruits recruits per spawner. Calculations vectorized elements shorter arguments recycled necessary.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spawner-recruit functions — SR","text":"salmonIPM package uses nonstandard parameterization Ricker model maximum recruitment Rmax. typically better identified data per capita density dependence, facilitates common interpretation priors Beverton-Holt. \\(e\\) base natural logarithm. Note functions RRS != \"none\" case written general form, alpha Rmax differing wild hatchery spawners. one parameter specified RRS, _W _H values parameter equal expression can simplified. RRS == \"none\" \\( R = \\begin{cases} \\alpha S & \\text{exponential} \\\\\\\\ \\dfrac{\\alpha S}{1 + \\dfrac{\\alpha S}{R_\\text{max}}} & \\text{Beverton-Holt} \\\\\\\\ \\alpha S \\text{exp} {\\left(- \\dfrac{\\alpha S}{e R_\\text{max}} \\right)} & \\text{Ricker} \\end{cases} \\) RRS != \"none\" \\( R = \\begin{cases} \\alpha_\\text{W} S_\\text{W} + \\alpha_\\text{H} S_\\text{H} & \\text{exponential} \\\\\\\\ \\dfrac{\\alpha_\\text{W} S_\\text{W} + \\alpha_\\text{H} S_\\text{H}}{1 + \\dfrac{\\alpha_\\text{W} S_\\text{W}}{R_\\text{max,W}} + \\dfrac{\\alpha_\\text{H} S_\\text{H}}{R_\\text{max,H}}} & \\text{Beverton-Holt (Leslie-Gower)} \\\\\\\\ \\left(\\alpha_\\text{W} S_\\text{W} + \\alpha_\\text{H} S_\\text{H} \\right)  \\text{exp}\\left(-\\dfrac{\\alpha_\\text{W} S_\\text{W}}{e R_\\text{max,W}} - \\dfrac{\\alpha_\\text{H} S_\\text{H}}{e R_\\text{max,H}} \\right) & \\text{Ricker} \\end{cases} \\)","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/SR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spawner-recruit functions — SR","text":"","code":"alpha <- 3 Rmax <- 1000 S <- 500  # default is Beverton-Holt SR(alpha = alpha, Rmax = Rmax, S = S)  #> [1] 600  # approximately Rmax SR(alpha = alpha, Rmax = Rmax, S = 1e6)  #> [1] 999.6668  # scale Rmax by habitat area SR(alpha = alpha, Rmax = Rmax, S = S, A = 0.1)  #> [1] 93.75  # discrete exponential ignores Rmax SR(SR_fun = \"exp\", alpha = alpha, Rmax = Rmax, S = S)  #> [1] 1500  # vectorization with recycling SR(alpha = rep(alpha, 10), Rmax = rep(Rmax, 10), S = matrix(S, 10, 4))  #>       [,1] [,2] [,3] [,4] #>  [1,]  600  600  600  600 #>  [2,]  600  600  600  600 #>  [3,]  600  600  600  600 #>  [4,]  600  600  600  600 #>  [5,]  600  600  600  600 #>  [6,]  600  600  600  600 #>  [7,]  600  600  600  600 #>  [8,]  600  600  600  600 #>  [9,]  600  600  600  600 #> [10,]  600  600  600  600  # return recruits per spawner SR(alpha = alpha, Rmax = Rmax, S = S, R_per_S = TRUE)  #> [1] 1.2  # plot Ricker and show Rmax curve(SR(SR_fun = \"Ricker\", alpha = alpha, Rmax = Rmax, S = x), from = 0, to = 2000,       xlab = \"Spawners\", ylab = \"Recruits\", main = \"Ricker\") abline(h = Rmax, lty = 2)   # differential hatchery / wild relative reproductive success alpha_W <- 3 alpha_H <- 2 S_W <- 400 S_H <- 100 # compare to BH result above SR(alpha_W = alpha_W, alpha_H = alpha_H, Rmax = Rmax, S_W = S_W, S_H = S_H) #> [1] 583.3333"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input data for IPMs or run-reconstruction models — stan_data","title":"Prepare input data for IPMs or run-reconstruction models — stan_data","text":"function mostly used internally, may occasionally useful diagnosing problems (e.g., checking numeric coding populations years replacement values NAs) plotting.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input data for IPMs or run-reconstruction models — stan_data","text":"","code":"stan_data(   stan_model = c(\"IPM_SS_np\", \"IPM_SSiter_np\", \"IPM_SS_pp\", \"IPM_SSiter_pp\",     \"IPM_SMS_np\", \"IPM_SMS_pp\", \"IPM_SMaS_np\", \"IPM_LCRchum_pp\", \"RR_SS_np\", \"RR_SS_pp\"),   SR_fun = \"BH\",   RRS = \"none\",   ages = NULL,   par_models = NULL,   center = TRUE,   scale = TRUE,   priors = NULL,   fish_data,   age_F = NULL,   age_B = NULL,   age_S_obs = NULL,   age_S_eff = NULL,   conditionGRonMS = FALSE,   fecundity_data = NULL )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input data for IPMs or run-reconstruction models — stan_data","text":"stan_model Character string specifying salmonIPM model fit. SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. ages multi-stage models, named list giving ages years fixed-age subadult life stages. needed IPM_SMaS_np case smolt age structure provided fish_data. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). center Logical indicating whether terms model matrices constructed fish_data using formulas par_models centered. usually recommended use default (TRUE) baseline parameter estimate applies predictors sample means, cases factor predictors center = FALSE may appropriate. combining categorical numeric predictors, latter can centered scaled prior modeling. scale Logical indicating whether model matrices constructed fish_data using formulas par_models scaled column SDs 1. Unit-scaling predictors less critical centering, advisable variables scales far 1. priors Optional list two-sided formulas form theta ~ distribution(params), theta hyperparameter can take user-specified prior distribution() canonical prior family. See priors details available parameters model corresponding families. hyperparameters given explicit priors use default values prior params. fish_data Data frame row corresponds unique population x year, includes following colnames particular order except noted (namely age- origin-composition data): pop  Required factor, numeric, character population name ID. coerced factor, recommended factor concise, informative levels, e.g. \"Johnson Cr\". especially true multiple populations, case levels(factor(pop)) can used interpreting plotting posterior draws. year  Required numeric integer giving calendar year corresponding observation. Note fish_data indexed brood year. brood table run reconstruction, see run_recon().  Required spawning habitat size (either stream length area). often time-invariant within population, need . Habitat size used internally convert population size scaling parameters (e.g., Rmax) density abundance, == 1 rescaling done parameters units fish. fine pool_pops == FALSE, hierarchical multi-population models advisable provide habitat size assumption hierarchical exchangeability valid. M_obs  life_cycle %% c(\"SMS\",\"SMaS\",\"LCRchum\"), observed number wild-origin smolts (integer numeric). Missing / unknown observations coded NA. tau_M_obs  life_cycle == \"LCRchum\",  known lognormal observation error SDs smolt abundance. Missing values (NA) imputed. downstream_trap  life_cycle == \"LCRchum\", row indices corresponding downstream smolt trap different population whose catch additionally includes smolts produced one upstream populations, assuming extra mortality en route. upstream population can one downstream trap (addition , ) trap can multiple upstream populations. downstream_trap[] == j, M_downstream[j] = M[j] + M[]. .na(downstream_trap[]) M[] double-counted. n_Mage[min_Mage]_obs...n_Mage[max_Mage]_obs  life_cycle == \"SMaS\", multiple columns observed smolt age sample frequencies (counts), [min_Mage] [max_Mage] numeral age years youngest oldest smolts, respectively. Note age measured calendar years brood year (.e., Gilbert-Rich system). S_obs  Required observed total escapement wild hatchery-origin spawners (integer numeric). Missing / unknown observations coded NA. tau_S_obs  life_cycle == \"LCRchum\", known lognormal observation error SDs spawner abundance. Missing values (NA) imputed. n_age[min_age]_obs ... n_age[max_age]_obs  Integer columns observed spawner age sample frequencies (counts), [min_age] [max_age] numeral age years (total, ocean age) youngest oldest spawners. Required unless life_cycle %% c(\"SSiter\",\"SMaS\"), case ignored. Note n_age_obs compositional data types must contain NA. sample included individuals given category samples collected, observed frequency 0. n_age[min_age]M_obs ... n_age[max_age]M_obs n_age[min_age + 1]K_obs ... n_age[max_age + 1]K_obs, life_cycle == \"SSiter\", integer columns observed first-time (maiden) repeat (former kelt) spawner age frequencies [min_age] [max_age] total age years youngest oldest maiden spawners, respectively. Contiguous maiden age columns denoted M followed equal number contiguous repeat age columns denoted K, repeat age 1 year greater corresponding maiden age. maximum repeat age class plus-group, .e. includes repeat spawners age max_age + 1 older. n_MSage[min_MSage]_obs ... n_MSage[max_MSage]_obs  life_cycle == \"SMaS\", integer columns observed spawner ocean age sample frequencies, [min_MSage] [max_MSage] youngest oldest ocean age years, respectively. Nonzero ocean age frequencies required conditionGRonMS == TRUE (columns must present case). conditionGRonMS == FALSE, n_MSage_obs represents independent samples, simply (implicit) ocean-age marginal totals n_GRage_obs. n_GRage[min_age]_[min_Mage]_obs ... n_GRage[max_age]_[max_Mage]_obs  life_cycle == \"SMaS\", integer columns observed Gilbert-Rich age sample frequencies, varying fastest smolt age (min_Mage:max_Mage) total age (min_age:max_age). example, life history subyearling yearling smolts ocean ages 2:3 column names c(\"n_GRage_3_1_obs\", \"n_GRage_4_1_obs\", \"n_GRage_4_2_obs\",   \"n_GRage_5_2_obs\"). combinations smolt age (implicitly) ocean age must represented, even never observed. n_W_obs  Required integer observed sample frequencies natural-origin spawners. n_H_obs  Required integer observed sample frequencies hatchery-origin spawners. fit_p_HOS  Logical 0/1 indicating row fish_data whether model estimate p_HOS[] > 0. Required model == \"IPM\" unless life_cycle == \"LCRchum\". stan_data() give warning row meets either two conditions: .logical(fit_p_HOS[]) == FALSE n_W_obs[] + n_H_obs[] > 0, .logical(fit_p_HOS[]) == TRUE n_W_obs[] + n_H_obs[] == 0. first means HOR observed, accounting risks biasing estimated parameters states (aka \"masking\"). second means model asked estimate p_HOS[] case-specific hatchery / wild origin-frequency data. p_HOS[] priori independent parameter (\"fixed effect\"), difficult task. may shared information via process model indirectly inform , likely lead poor estimates sampling problems. n_O0_obs n_O[which_O_pop[1]]_obs ... n_O[which_O_pop[N_O_pop]]_obs life_cycle = \"LCRchum\", multiple columns observed origin sample frequencies. first column, named \"O\" origin \"0\" null / naught, refers unknown natural origin, .e. unmarked spawners presumed . next N_O_pop columns numbered levels factor(fish_data$pop) corresponding set known-origin populations. Typically hatcheries, may identified PIT tags, parentage-based tagging, means. LCRchum model uses origin-composition observations infer dispersal rates hatchery (known-origin) fish, n_W_obs (n_O0_obs assuming known origins hatcheries) n_H_obs (equal sum(n_O_obs[-1]) case) needed, although can included fish_data informational purposes post-processing draws. Likewise fit_p_HOS needed ignored. n_M_obs  life_cycle == \"LCRchum\", integer observed frequencies male spawners. n_F_obs  life_cycle == \"LCRchum\", integer observed frequencies female spawners. p_G_obs  life_cycle == \"LCRchum\", observed proportion (assumed known without error) female spawners \"green\", .e. fully fecund. F_rate  Total harvest rate (proportion) natural-origin fish. Required models, even values 0. B_take_obs  Number adults taken hatchery broodstock. Required models, even values 0. S_add_obs  stan_model == \"IPM_LCRchum_pp\", number adults translocated population. ...  Additional variables used covariates. can vary spatially /temporally. age_F Logical 0/1 vector length N_age indicating whether adult age fully (non)selected fishery. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_B Logical 0/1 vector length N_age indicating whether adult age fully (non)selected broodstock collection. default selected. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_S_obs stan_model == \"IPM_SS_pp\", logical 0/1 integer vector indicating, adult age, whether observed total spawner data includes age. default treat S_obs including spawners ages. option may useful certain age classes counted. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). age_S_eff stan_model == \"IPM_SS_pp\", logical 0/1 vector indicating, adult age, whether spawners age contribute reproduction. can used, e.g., exclude jacks effective breeding population. default include spawners ages. life_cycle == \"SSiter\", N_age refers total number maiden repeat age classes (counting repeat plus group 1). conditionGRonMS life_cycle == \"SMaS\", logical indicating whether Gilbert-Rich age frequencies n_GRage_obs fish_data conditioned ocean age. FALSE (default) counts assumed sampled randomly population. TRUE, assumed number spawners ocean age (e.g., jacks vs 1-ocean) arbitrary, smolt (FW) age randomly sampled within ocean age; .e., smolt age x ocean age contingency table, cell frequencies conditioned column totals. fecundity_data life_cycle == \"LCRchum\", data frame following columns, representing observations fecundity row corresponding female: age_E  Female age years. E_obs  Observed fecundity.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input data for IPMs or run-reconstruction models — stan_data","text":"named list passed rstan::sampling() data argument used fitting salmonIPM models.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare input data for IPMs or run-reconstruction models — stan_data","text":"","code":"# Simulate data for a multi-population spawner-to-spawner model set.seed(1234) N_pop <- 10 N_year <- 20 N <- N_pop*N_year  pars <- list(mu_alpha = 2, sigma_alpha = 0.5, mu_Rmax = 5, sigma_Rmax = 0.5,               rho_alphaRmax = 0.3, rho_R = 0.7, sigma_year_R = 0.5, sigma_R = 0.3,               tau = 0.5, mu_p = c(0.05, 0.55, 0.4), sigma_pop_p = c(0.1, 0.2),               R_pop_p = diag(2), sigma_p = c(0.5, 0.5), R_p = diag(2), S_init_K = 0.7)  fd <- data.frame(pop = rep(1:N_pop, each = N_year), year = rep(1:N_year, N_pop),                  A = 1, p_HOS = 0, F_rate = rbeta(N,7,3), B_rate = 0,                  n_age_obs = 50, n_HW_obs = 0)  sim_out <- simIPM(pars = pars, fish_data = fd, N_age = 3, max_age = 5)  # Prepare simulated data for Stan dat <- stan_data(\"IPM_SS_pp\", fish_data = sim_out$sim_dat)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","title":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","text":"function mostly used internally, may occasionally called directly help diagnose sampling problems simulation testing.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","text":"","code":"stan_init(   stan_model = c(\"IPM_SS_np\", \"IPM_SSiter_np\", \"IPM_SS_pp\", \"IPM_SSiter_pp\",     \"IPM_SMS_np\", \"IPM_SMS_pp\", \"IPM_SMaS_np\", \"IPM_LCRchum_pp\", \"RR_SS_np\", \"RR_SS_pp\"),   stan_data,   chains = 1 )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","text":"stan_model Character string specifying salmonIPM model fit. stan_data Named list input data fitting either IPM run-reconstruction spawner-recruit model Stan, returned stan_data(). chains positive integer specifying number Markov chains.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","text":"length-chains list named lists containing starting values primitive parameters states model. Passed rstan::sampling() init argument fitting salmonIPM models.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for fitting IPMs or run-reconstruction spawner-recruit models. — stan_init","text":"","code":"# Simulate data for a multi-population spawner-to-spawner model set.seed(1234) N_pop <- 10 N_year <- 20 N <- N_pop*N_year  pars <- list(mu_alpha = 2, sigma_alpha = 0.5, mu_Rmax = 5, sigma_Rmax = 0.5,               rho_alphaRmax = 0.3, rho_R = 0.7, sigma_year_R = 0.5, sigma_R = 0.3,               tau = 0.5, mu_p = c(0.05, 0.55, 0.4), sigma_pop_p = c(0.1, 0.2),               R_pop_p = diag(2), sigma_p = c(0.5, 0.5), R_p = diag(2), S_init_K = 0.7)  fd <- data.frame(pop = rep(1:N_pop, each = N_year), year = rep(1:N_year, N_pop),                  A = 1, p_HOS = 0, F_rate = rbeta(N,7,3), B_rate = 0,                  n_age_obs = 50, n_HW_obs = 0)  sim_out <- simIPM(pars = pars, fish_data = fd, N_age = 3, max_age = 5)  # Prepare simulated data for Stan dat <- stan_data(\"IPM_SS_pp\", fish_data = sim_out$sim_dat)  # Generate inits for 3 chains inits <- stan_init(\"IPM_SS_pp\", stan_data = dat, chains = 3)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior means from salmonIPMfit object — stan_mean","title":"Extract posterior means from salmonIPMfit object — stan_mean","text":"Convenience function simplify extracting posterior means single parameters stanfit objects.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior means from salmonIPMfit object — stan_mean","text":"","code":"stan_mean(object, pars)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior means from salmonIPMfit object — stan_mean","text":"object fitted salmonIPMfit object. pars Character vector names parameters summarize.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior means from salmonIPMfit object — stan_mean","text":"scalar vector means posterior distribution pars.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the (hyper)parameters and states in a specified salmonIPM model — stan_pars","title":"Return the (hyper)parameters and states in a specified salmonIPM model — stan_pars","text":"Return (hyper)parameters states specified salmonIPM model","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the (hyper)parameters and states in a specified salmonIPM model — stan_pars","text":"","code":"stan_pars(   stan_model = c(\"IPM_SS_np\", \"IPM_SSiter_np\", \"IPM_SS_pp\", \"IPM_SSiter_pp\",     \"IPM_SMS_np\", \"IPM_SMS_pp\", \"IPM_SMaS_np\", \"IPM_LCRchum_pp\", \"RR_SS_np\", \"RR_SS_pp\"),   pars = c(\"all\", \"hyper\", \"group\", \"states\", \"ppd\"),   SR_fun = \"BH\",   RRS = \"none\",   par_models = NULL,   object = NULL )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the (hyper)parameters and states in a specified salmonIPM model — stan_pars","text":"stan_model Character string giving name model. See salmonIPM() details. pars optional character vector specifying one hierarchical levels parameters. Options \"\" (default), \"hyper\" (top-level hyperparameters given priors), \"group\" (pop- year-level parameters shared multiple states), \"states\" (lowest level, corresponding unique rows fish_data), \"ppd\" (model == \"RR\", observation-level predictions drawn posterior predictive distribution). SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE. par_models Optional list two-sided formulas form theta ~ x1 + ... + xK, theta (hyper)parameter state model specified stan_model accepts covariates (see Details available model-parameter combinations) x1 + ... + xK terms involving variables fish_data. Standard formula syntax : * may used; see stats::formula(). object salmonIPMfit object. provided SR_fun, RRS par_models needed ignored; values extracted object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the (hyper)parameters and states in a specified salmonIPM model — stan_pars","text":"Character vector names selected parameters states","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate prior specification for an integrated spawner-recruit model. — stan_prior","title":"Validate prior specification for an integrated spawner-recruit model. — stan_prior","text":"Takes optional user-specified prior function otherwise returns default prior parameters given stan_model. function internal use.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate prior specification for an integrated spawner-recruit model. — stan_prior","text":"","code":"stan_prior(user, default)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate prior specification for an integrated spawner-recruit model. — stan_prior","text":"user user-specified prior function described priors. default default prior function described priors.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/stan_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate prior specification for an integrated spawner-recruit model. — stan_prior","text":"named array user-specifiable prior parameters whose elements part data argument passed rstan::sampling() fitting salmonIPM models. dist attribute character string giving name distribution.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"Summarize posterior distributions estimated parameters derived quantities using MCMC draws salmonIPMfit object.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"","code":"# S3 method for class 'salmonIPMfit' summary(   object,   pars = \"hyper\",   include = TRUE,   probs = c(0.05, 0.5, 0.95),   funs = list(),   .cores = 1 )"},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"object object class salmonIPMfit. pars character vector specifying (hyper)parameters, states, /quantities interest (\"parameters\") summarize. Parameters can explicitly named one shortcuts can used specify hierarchical levels parameters; see stan_pars() details. default \"hyper\", .e. top-level hyperparameters given priors. include Logical scalar defaulting TRUE indicating whether include exclude parameters given pars. FALSE, entire multidimensional parameters can excluded, rather particular elements . probs numeric vector posterior quantiles return. default c(0.05, 0.5, 0.95), .e. median 90% credible interval. funs Named list summary diagnostic functions. provided names used names columns result unless function returns named vector, case latter names used corresponding columns. functions can specified format supported rlang::as_function(). Passed ... argument summarize_draws(). .cores number cores use computing summaries different variables parallel. default .cores = 1, case parallelization used.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"data frame whose first column contains variable names remaining columns contain summary statistics diagnostics.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"Internally posterior samples converted draws object summarize_draws() called compute summary statistics diagnostics. See function's documentation available diagnostic functions, syntax examples. default summaries mean, sd, ~quantile(.x, probs), default diagnostics bulk effective sample size ess_bulk() Gelman-Rubin potential scale reduction factor rhat(). summary diagnostic functions specified via funs, override defaults rather augmenting . pars includes correlation matrices, lower triangular elements returned. avoids redundant summary output well false positive diagnostic results bulk-ESS Rhat NaN diagonal elements.","code":""},{"path":[]},{"path":"https://ebuhle.github.io/salmonIPM/reference/summary.salmonIPMfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for salmonIPMfit objects — summary.salmonIPMfit","text":"","code":"# <under construction>"},{"path":"https://ebuhle.github.io/salmonIPM/reference/test_unicode.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if unicode is rendering in test_unicode.Rd — test_unicode","title":"Test if unicode is rendering in test_unicode.Rd — test_unicode","text":"Test unicode rendering test_unicode.Rd","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/test_unicode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if unicode is rendering in test_unicode.Rd — test_unicode","text":"","code":"test_unicode()"},{"path":"https://ebuhle.github.io/salmonIPM/reference/test_unicode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test if unicode is rendering in test_unicode.Rd — test_unicode","text":"checkbox: ☑ maybe backslash escape version work: \\u2611;","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/validate_RRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate RRS specification — validate_RRS","title":"Validate RRS specification — validate_RRS","text":"Check whether RRS specification consistent stan_model.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/validate_RRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate RRS specification — validate_RRS","text":"","code":"validate_RRS(stan_model, SR_fun = \"BH\", RRS)"},{"path":"https://ebuhle.github.io/salmonIPM/reference/validate_RRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate RRS specification — validate_RRS","text":"stan_model Character string specifying salmonIPM model fit. concise alternative specifying model, life_cycle, pool_pops override arguments. SR_fun One \"exp\" (density-independent discrete exponential), \"BH\" (Beverton-Holt, default), \"Ricker\", indicating spawner-recruit function fit. Synonyms \"DI\", \"B-H\", \"bh\", \"b-h\" \"ricker\" accepted. RRS character string vector strings naming parameters function specified SR_fun differ wild- hatchery-origin spawners, relative reproductive success hatchery spawners equal 1. pool_pops == TRUE, names population-specific parameters, hyper-means. example, life_cycle %% c(\"SS\",\"SSiter\"), options \"none\" (default), \"alpha\", \"Rmax\", c(\"alpha\",\"Rmax\"). Currently RRS implemented pool_pops == FALSE.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/reference/validate_RRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate RRS specification — validate_RRS","text":"Nothing returned; function throws error requested RRS found hyperparameters stan_model.","code":""},{"path":"https://ebuhle.github.io/salmonIPM/news/index.html","id":"salmonipm-160","dir":"Changelog","previous_headings":"","what":"salmonIPM 1.6.0","title":"salmonIPM 1.6.0","text":"Add salmonIPMfit object class associated S3 methods functionality (#61).","code":""}]
